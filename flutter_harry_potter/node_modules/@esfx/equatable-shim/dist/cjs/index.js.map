{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\r\n   Copyright 2019 Ron Buckton\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n\r\nimport { Equatable, Comparable, rawHash } from '@esfx/equatable';\r\n\r\n// #region Object augmentations\r\n\r\ndeclare global {\r\n    interface Object {\r\n        [Equatable.equals](other: unknown): boolean;\r\n        [Equatable.hash](): number;\r\n    }\r\n}\r\n\r\nObject.defineProperties(Object.prototype, {\r\n    [Equatable.equals]: {\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (this: unknown, other: unknown) {\r\n            return Object.is(this, other);\r\n        }\r\n    },\r\n    [Equatable.hash]: {\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (this: unknown) {\r\n            return rawHash(this);\r\n        }\r\n    }\r\n});\r\n\r\n// #endregion Object augmentations\r\n\r\n// #region String augmentations\r\n\r\ndeclare global {\r\n    interface String {\r\n        [Equatable.equals](other: unknown): boolean;\r\n        [Equatable.hash](): number;\r\n        [Comparable.compareTo](other: unknown): number;\r\n    }\r\n}\r\n\r\nObject.defineProperties(String.prototype, {\r\n    [Equatable.equals]: {\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (this: string, other: unknown) {\r\n            return this === other;\r\n        }\r\n    },\r\n    [Comparable.compareTo]: {\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (this: string, other: unknown) {\r\n            const s = String(other);\r\n            if (this < s) return -1;\r\n            if (this > s) return 1;\r\n            return 0;\r\n        }\r\n    }\r\n});\r\n\r\n// #endregion String augmentations\r\n\r\n// #region Symbol augmentations\r\n\r\ndeclare global {\r\n    interface Symbol {\r\n        [Equatable.equals](other: unknown): boolean;\r\n        [Equatable.hash](): number;\r\n    }\r\n}\r\n\r\nObject.defineProperties(Symbol.prototype, {\r\n    [Equatable.equals]: {\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (this: symbol, other: unknown) {\r\n            return this === other;\r\n        }\r\n    }\r\n});\r\n\r\n// #endregion Symbol augmentations\r\n\r\n// #region Number augmentations\r\n\r\ndeclare global {\r\n    interface Number extends Comparable {}\r\n}\r\n\r\nObject.defineProperties(Number.prototype, {\r\n    [Equatable.equals]: {\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (this: number, other: unknown) {\r\n            return this === other;\r\n        }\r\n    },\r\n    [Comparable.compareTo]: {\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (this: number, other: unknown) {\r\n            return this - Number(other);\r\n        }\r\n    }\r\n});\r\n\r\n// #endregion Number augmentations\r\n\r\n// #region BigInt augmentations\r\n\r\ndeclare global {\r\n    interface BigInt extends Comparable {}\r\n}\r\n\r\nif (typeof BigInt === \"function\") {\r\n    Object.defineProperties(BigInt.prototype, {\r\n        [Equatable.equals]: {\r\n            configurable: true,\r\n            writable: true,\r\n            value: function (this: bigint, other: unknown) {\r\n                return this === other;\r\n            }\r\n        },\r\n        [Comparable.compareTo]: {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: function (this: bigint, other: unknown) {\r\n                const i = BigInt(other as any);\r\n                if (this < i) return -1;\r\n                if (this > i) return 1;\r\n                return 0;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n// #endregion BigInt augmentations\r\n\r\n// #region Boolean augmentations\r\n\r\ndeclare global {\r\n    interface Boolean extends Comparable {}\r\n}\r\n\r\nObject.defineProperties(Boolean.prototype, {\r\n    [Equatable.equals]: {\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (this: boolean, other: unknown) {\r\n            return this === other;\r\n        }\r\n    },\r\n    [Comparable.compareTo]: {\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (this: boolean, other: unknown) {\r\n            const s = Boolean(other);\r\n            if (this < s) return -1;\r\n            if (this > s) return 1;\r\n            return 0;\r\n        }\r\n    }\r\n});\r\n\r\n// #endregion Boolean augmentations\r\n"]}