{"version":3,"file":"xxhash32.js","sourceRoot":"","sources":["../../../../src/internal/hashers/xxhash32.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\r\n   Copyright 2022 Ron Buckton\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n\r\n   THIRD PARTY LICENSE NOTICE:\r\n\r\n   xxHash Library\r\n   Copyright (c) 2012-2021 Yann Collet\r\n   All rights reserved.\r\n\r\n   BSD 2-Clause License (https://www.opensource.org/licenses/bsd-license.php)\r\n\r\n   Redistribution and use in source and binary forms, with or without modification,\r\n   are permitted provided that the following conditions are met:\r\n\r\n   * Redistributions of source code must retain the above copyright notice, this\r\n     list of conditions and the following disclaimer.\r\n\r\n   * Redistributions in binary form must reproduce the above copyright notice, this\r\n     list of conditions and the following disclaimer in the documentation and/or\r\n     other materials provided with the distribution.\r\n\r\n   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n   ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n   WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\r\n   ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n   (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\r\n   ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nconst PRIME32_1 = 0x9e3779b1;\r\nconst PRIME32_2 = 0x85ebca77;\r\nconst PRIME32_3 = 0xc2b2ae3d;\r\nconst PRIME32_4 = 0x27d4eb2f;\r\nconst PRIME32_5 = 0x165667b1;\r\n\r\nexport function xxh32(buffer: ArrayBuffer, input_ptr: number, inputLength: number, seed: number): number {\r\n    if (input_ptr % 4) throw new TypeError(\"Pointer not aligned\");\r\n    const buffer_u32 = new Uint32Array(buffer);\r\n    let acc: number;\r\n    let end: number;\r\n    let limit: number;\r\n    let v1: number;\r\n    let v2: number;\r\n    let v3: number;\r\n    let v4: number;\r\n    end = input_ptr + inputLength;\r\n    // translate ptr to u32 offset\r\n    input_ptr >>= 2;\r\n    if (inputLength >= 16) {\r\n        limit = (end - 16) >> 2;\r\n        v1 = (((seed + PRIME32_1) | 0) + PRIME32_2) | 0;\r\n        v2 = (seed + PRIME32_2) | 0;\r\n        v3 = (seed + 0) | 0;\r\n        v4 = (seed + PRIME32_1) | 0;\r\n        do {\r\n            v1 = (v1 + (buffer_u32[input_ptr++] * PRIME32_2) | 0) | 0;\r\n            v1 = (((v1 << 13) | (v1 >>> 19)) * PRIME32_1) | 0;\r\n            v2 = (v2 + (buffer_u32[input_ptr++] * PRIME32_2) | 0) | 0;\r\n            v2 = (((v2 << 13) | (v2 >>> 19)) * PRIME32_1) | 0;\r\n            v3 = (v3 + (buffer_u32[input_ptr++] * PRIME32_2) | 0) | 0;\r\n            v3 = (((v3 << 13) | (v3 >>> 19)) * PRIME32_1) | 0;\r\n            v4 = (v4 + (buffer_u32[input_ptr++] * PRIME32_2) | 0) | 0;\r\n            v4 = (((v4 << 13) | (v4 >>> 19)) * PRIME32_1) | 0;\r\n        }\r\n        while (input_ptr <= limit);\r\n        acc = (v1 << 1 | v1 >>> 31) + (v2 << 7 | v2 >>> 25) | (v3 << 12 | v3 >>> 20) | (v4 << 18 | v4 >>> 14);\r\n    }\r\n    else {\r\n        acc = (seed + PRIME32_5) | 0;\r\n    }\r\n    acc = (acc + inputLength) | 0;\r\n    limit = (end - 4) >> 2;\r\n    while (input_ptr <= limit) {\r\n        acc = (acc + (buffer_u32[input_ptr++] * PRIME32_3) | 0) | 0;\r\n        acc = ((acc << 17 | acc >>> 15) * PRIME32_4) | 0;\r\n    }\r\n    // translate ptr to byte offset\r\n    input_ptr = input_ptr << 2;\r\n    if (input_ptr < end) {\r\n        const buffer_u8 = new Uint8Array(buffer_u32.buffer);\r\n        do {\r\n            acc = (acc + (buffer_u8[input_ptr++] * PRIME32_5) | 0) | 0;\r\n            acc = ((acc << 11 | acc >>> 21) * PRIME32_1) | 0;\r\n        }\r\n        while (input_ptr < end);\r\n    }\r\n    acc = ((acc ^ (acc >>> 15)) * PRIME32_2) | 0;\r\n    acc = ((acc ^ (acc >>> 13)) * PRIME32_3) | 0;\r\n    acc = acc ^ (acc >>> 16);\r\n    return acc >>> 0;\r\n}\r\n"]}